import { Button, VerticalBox, LineEdit } from "std-widgets.slint";




export component AppWindow inherits Window 
{
    callback divide-income(string);
    property <string> results: "";
    background: #313e50;

    GridLayout 
    {        
        padding: 50px;
        spacing: 25px;
        Row
        {
            Text
            {
                text: "Enter total income";
                horizontal-alignment: center;
                font-size: 24px;
                font-weight: 900;
            }
        }
        Row
        {
            income := LineEdit 
            {
                horizontal-alignment: center;
                font-size: 16px;
                placeholder-text: "Enter your number";
                height: 35px;
            }
        }
        Row
        {
            Button 
            {
                text: "Calculate";
                primary: true;
                height: 35px;
                clicked => {divide-income(income.text)}
            }
        }
        Row{
            VerticalBox 
            {
                Rectangle 
                {
                    height: 100px;
                    background: #f2f2f2;
                    Text
                    {
                        color: black;
                        font-size: 16px;
                        font-weight: 500;
                        text: root.results;
                    } 
                }
            }
        }
    }
}


// creating a grid layout for table like GUI
// do 3 lines - 3 rows
// adjust the GUI window - horizontal center alignment, make the font 24, and the font weight 900
// Adding the text box through line edit with a "enter number" request" with 16 pixels and 16 pixels, horizontal center alignment
// Adding the button and adjusting the colors
// padding (50) and spacing (25)
// modeling out the button logic and prototyping it
// Adding the result property 
// making the button pushing call-back
// Adding the results window with a white color, black text 